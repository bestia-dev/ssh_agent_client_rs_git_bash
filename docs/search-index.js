var searchIndex = new Map(JSON.parse('[["ssh_agent_client_rs_git_bash",{"t":"FKNNNNMNCNNNNNNONNNNNPPGPPIPNNNNNNNNNNNNNN","n":["Client","GitBash","add_identity","borrow","borrow_mut","connect","connect_to_git_bash_or_linux","","error","from","into","list_identities","remove_all_identities","remove_identity","sign","socket","try_from","try_into","type_id","vzip","with_read_write","AgentCommunication","Err","Error","GitBashErrorMessage","Ok","Result","SshAgentClientRs","borrow","borrow_mut","fmt","","from","","","into","source","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"ssh_agent_client_rs_git_bash"],[21,"ssh_agent_client_rs_git_bash::error"],[42,"ssh_agent_client_rs"],[43,"ssh_key::private"],[44,"ssh_agent_client_rs::error"],[45,"core::result"],[46,"std::path"],[47,"ssh_key::public"],[48,"alloc::vec"],[49,"ssh_key::signature"],[50,"core::any"],[51,"alloc::boxed"],[52,"core::fmt"],[53,"std::io::error"],[54,"core::error"],[55,"core::option"],[56,"alloc::string"]],"i":"``d000C`1`111111111111AbCb`10`111111111111111","f":"``{{{f{bd}}{f{h}}}{{n{jl}}}}{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{A`}}}{{n{dl}}}}{{{f{A`}}}{{n{dAb}}}}0`{cc{}}{{}c{}}{{{f{bd}}}{{n{{Af{Ad}}l}}}}{{{f{bd}}}{{n{jl}}}}8{{{f{bd}}{f{Ad}}{f{{Aj{Ah}}}}}{{n{All}}}}`{c{{n{e}}}{}{}}{{}{{n{c}}}{}}{fAn}{{}c{}}{{{Bb{B`}}}d}```````=<{{{f{Ab}}{f{bBd}}}Bf}0{lAb};{BhAb};{{{f{Ab}}}{{Bl{{f{Bj}}}}}}{fBn}9876","D":"Bl","p":[[0,"mut"],[5,"Client",0,42],[1,"reference",null,null,1],[5,"PrivateKey",43],[1,"unit"],[6,"Error",44],[6,"Result",45,null,1],[5,"Path",46],[6,"Error",21],[5,"PublicKey",47],[5,"Vec",48],[1,"u8"],[1,"slice"],[5,"Signature",49],[5,"TypeId",50],[10,"ReadWrite",42],[5,"Box",51,null,1],[5,"Formatter",52],[8,"Result",52],[5,"Error",53],[10,"Error",54],[6,"Option",55,null,1],[5,"String",56],[10,"GitBash",0],[8,"Result",21]],"r":[[0,42],[2,42],[3,42],[4,42],[5,42],[7,42],[9,42],[10,42],[11,42],[12,42],[13,42],[14,42],[15,42],[16,42],[17,42],[18,42],[19,42],[20,42]],"b":[[30,"impl-Display-for-Error"],[31,"impl-Debug-for-Error"],[32,"impl-From%3CError%3E-for-Error"],[34,"impl-From%3CError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABQABgAEAAEABwAAABAABAAcAAUAIwAAACUABQA=","P":[[3,"T"],[5,""],[9,"T"],[10,"U"],[11,""],[16,"U,T"],[17,"U"],[18,""],[19,"V"],[20,""],[28,"T"],[30,""],[33,"T"],[34,""],[35,"U"],[36,""],[38,"U,T"],[39,"U"],[40,""],[41,"V"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2325]}